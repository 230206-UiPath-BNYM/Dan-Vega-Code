<Activity mc:Ignorable="sap sap2010" x:Class="Report" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:uasc="clr-namespace:UiPath.Activities.System.Collections;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="ZolShopList_dt" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="walmart_dt" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>893,2704</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Report_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="50">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Report" sap:VirtualizedContainerService.HintSize="400,2639" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)]" Name="threeElementList" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="itemNameAndQtyDict">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="new Dictionary(of string, string)" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="itemNameAndPriceDict">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="new Dictionary(of string, string)" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="clientItemNameAndQty">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="new Dictionary(of string, string)" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="ZolsItemName" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="walmartInventoryList">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="new List(of String)" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" Name="existsAdvilWalmart" />
      <Variable x:TypeArguments="x:Int32" Name="index" />
      <Variable x:TypeArguments="sd:DataTable" Name="cvs_dt" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="cvsInventoryList">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="new List(of String)" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" Name="existsAdvilCVS" />
      <Variable x:TypeArguments="x:Int32" Name="indexAdvil" />
      <Variable x:TypeArguments="sd:DataTable" Name="petsmart_dt" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="petsmartInventoryList">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="new List(of String)" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Boolean" Name="existsAdvilPetSmart" />
      <Variable x:TypeArguments="x:Int32" Name="indexAdvilPetsmart" />
      <Variable x:TypeArguments="x:String" Name="item" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="338,239" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Enter item name:" Title="Find an Item">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[item]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" sap2010:Annotation.AnnotationText="Reads Zol's shopping List." DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="338,83" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="602,660" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="540,549" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="ExcelFiles\ClientShoppingList.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="506,280" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.Sheet(&quot;Zol&quot;).Range(&quot;A:C&quot;)]" SaveTo="[ZolShopList_dt]" />
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelProcessScopeX>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Add shopping items to a List&lt;String&gt;" DataTable="[ZolShopList_dt]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,94" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,276" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="threeElementList.Add(row(&quot;ClientName&quot;).ToString)&#xD;&#xA;threeElementList.Add(row(&quot;ItemName&quot;).ToString)&#xD;&#xA;threeElementList.Add(row(&quot;Qty&quot;).ToString)&#xD;&#xA;&#xD;&#xA;ZolsItemName = row(&quot;ItemName&quot;).ToString&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;clientItemNameAndQty.Add(row(&quot;ItemName&quot;).ToString, row(&quot;Qty&quot;).ToString)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;'itemNameAndQtyDict.Add(row(&quot;ItemName&quot;).ToString, row(&quot;Qty&quot;).ToString)&#xD;&#xA;'itemNameAndPriceDict.Add(row(&quot;ItemName&quot;).ToString, row(&quot;Price&quot;).ToString)&#xD;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="338,165" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
              <ui:InvokeCode.Arguments>
                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="threeElementList">
                  <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="threeElementList" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="row">
                  <VisualBasicReference x:TypeArguments="sd:DataRow" ExpressionText="row" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="itemNameAndQtyDict">
                  <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="itemNameAndQtyDict" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="itemNameAndPriceDict">
                  <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="itemNameAndPriceDict" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="clientItemNameAndQty">
                  <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="clientItemNameAndQty" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="x:String" x:Key="ZolsItemName">
                  <VisualBasicReference x:TypeArguments="x:String" ExpressionText="ZolsItemName" />
                </InOutArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" sap2010:Annotation.AnnotationText="Read walmarts inventory" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="338,83" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="602,660" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="540,549" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" WorkbookPath="ExcelFiles\VendorItems.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="506,280" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_2" Range="[Excel.Sheet(&quot;WalMart&quot;).Range(&quot;B:D&quot;)]" SaveTo="[walmart_dt]" />
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelProcessScopeX>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Saving walmarts inventory into List" DataTable="[walmart_dt]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,83" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,276" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="walmartInventoryList.Add(row(&quot;ItemName&quot;).ToString)&#xD;&#xA;walmartInventoryList.Add(row(&quot;Qty&quot;).ToString)&#xD;&#xA;walmartInventoryList.Add(row(&quot;Price&quot;).ToString)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;itemNameAndQtyDict.Add(row(&quot;ItemName&quot;).ToString, row(&quot;Qty&quot;).ToString)&#xD;&#xA;itemNameAndPriceDict.Add(row(&quot;ItemName&quot;).ToString, row(&quot;Price&quot;).ToString)" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="338,165" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
              <ui:InvokeCode.Arguments>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="itemNameAndQtyDict">
                  <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="itemNameAndQtyDict" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="itemNameAndPriceDict">
                  <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="itemNameAndPriceDict" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="row">
                  <VisualBasicReference x:TypeArguments="sd:DataRow" ExpressionText="row" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="walmartInventoryList">
                  <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="walmartInventoryList" />
                </InOutArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <uasc:ExistsInCollection x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="checking if Advil exists in walmart" Collection="[walmartInventoryList]" DisplayName="Exists in collection" Exists="[existsAdvilWalmart]" sap:VirtualizedContainerService.HintSize="338,323" sap2010:WorkflowViewState.IdRef="ExistsInCollection`1_2" Index="[index]" Item="[item]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uasc:ExistsInCollection>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" sap2010:Annotation.AnnotationText="Read CVS inventory" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="338,83" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_3">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="602,660" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="540,549" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ResizeWindow="None" WorkbookPath="ExcelFiles\VendorItems.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="506,280" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_3" Range="[Excel.Sheet(&quot;CVS&quot;).Range(&quot;B:D&quot;)]" SaveTo="[cvs_dt]" />
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelProcessScopeX>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Saving CVS inventory into List" DataTable="[cvs_dt]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,83" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,276" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="cvsInventoryList.Add(row(&quot;ItemName&quot;).ToString)&#xD;&#xA;cvsInventoryList.Add(row(&quot;Qty&quot;).ToString)&#xD;&#xA;cvsInventoryList.Add(row(&quot;Price&quot;).ToString)&#xD;&#xA;&#xD;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="338,165" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
              <ui:InvokeCode.Arguments>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="itemNameAndQtyDict">
                  <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="itemNameAndQtyDict" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="itemNameAndPriceDict">
                  <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="itemNameAndPriceDict" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="row">
                  <VisualBasicReference x:TypeArguments="sd:DataRow" ExpressionText="row" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="walmartInventoryList">
                  <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="walmartInventoryList" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="cvsInventoryList">
                  <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="cvsInventoryList" />
                </InOutArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <uasc:ExistsInCollection x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="checking if Advil exits in CVS" Collection="[cvsInventoryList]" DisplayName="Exists in collection" Exists="[existsAdvilCVS]" sap:VirtualizedContainerService.HintSize="338,323" sap2010:WorkflowViewState.IdRef="ExistsInCollection`1_3" Index="[indexAdvil]" Item="[item]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uasc:ExistsInCollection>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" sap2010:Annotation.AnnotationText="Read PetSmart inventory" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="338,83" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_4">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="602,660" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="540,549" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_4" ResizeWindow="None" WorkbookPath="ExcelFiles\VendorItems.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="506,280" sap2010:WorkflowViewState.IdRef="Sequence_14">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_4" Range="[Excel.Sheet(&quot;PetSmart&quot;).Range(&quot;B:D&quot;)]" SaveTo="[petsmart_dt]" />
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelProcessScopeX>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Saving PetSmart inventory into List" DataTable="[petsmart_dt]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="338,83" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,276" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="petsmartInventoryList.Add(row(&quot;ItemName&quot;).ToString)&#xD;&#xA;petsmartInventoryList.Add(row(&quot;Qty&quot;).ToString)&#xD;&#xA;petsmartInventoryList.Add(row(&quot;Price&quot;).ToString)&#xD;&#xA;&#xD;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="338,165" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
              <ui:InvokeCode.Arguments>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="itemNameAndQtyDict">
                  <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="itemNameAndQtyDict" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="itemNameAndPriceDict">
                  <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:String)" ExpressionText="itemNameAndPriceDict" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="row">
                  <VisualBasicReference x:TypeArguments="sd:DataRow" ExpressionText="row" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="walmartInventoryList">
                  <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="walmartInventoryList" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="cvsInventoryList">
                  <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="cvsInventoryList" />
                </InOutArgument>
                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="petsmartInventoryList">
                  <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="petsmartInventoryList" />
                </InOutArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <uasc:ExistsInCollection x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="checking if Advil exits in PetSmart" Collection="[petsmartInventoryList]" DisplayName="Exists in collection" Exists="[existsAdvilPetSmart]" sap:VirtualizedContainerService.HintSize="338,323" sap2010:WorkflowViewState.IdRef="ExistsInCollection`1_4" Index="[indexAdvilPetsmart]" Item="[item]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uasc:ExistsInCollection>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="If existsAdvilWalmart Then&#xD;&#xA;&#x9;Console.WriteLine(&quot;Walmart has it&quot;)&#xD;&#xA;Else If existsAdvilCVS Then&#xD;&#xA;&#x9;Console.WriteLine(&quot;CVS has it&quot;)&#xD;&#xA;Else If existsAdvilPetSmart Then&#xD;&#xA;&#x9;Console.WriteLine(&quot;PetSmart has it&quot;)&#xD;&#xA;Else&#xD;&#xA;&#x9;Console.WriteLine(&quot;Item NA&quot;)&#xD;&#xA;End If " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="338,165" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
      <ui:InvokeCode.Arguments>
        <InOutArgument x:TypeArguments="x:Boolean" x:Key="existsAdvilWalmart">
          <VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="existsAdvilWalmart" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="x:Boolean" x:Key="existsAdvilCVS">
          <VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="existsAdvilCVS" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="x:Boolean" x:Key="existsAdvilPetSmart">
          <VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="existsAdvilPetSmart" />
        </InOutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
  </Sequence>
</Activity>